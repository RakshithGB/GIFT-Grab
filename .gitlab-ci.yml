variables:
  CI_SCRIPTS_DIR: "./ci"
  SCRATCH_DIR: "/home/gitlab-runner/giftgrab-scratch"
  CTEST_OUTPUT_ON_FAILURE: "1"

before_script:
  - export REVHASH=$(git rev-parse --short HEAD)
  - export SCRATCH_DIR="$SCRATCH_DIR/$REVHASH"
  - mkdir -p $SCRATCH_DIR
  - export GiftGrab_SOURCE_DIR="$(pwd)/src"
  - source "$CI_SCRIPTS_DIR/utils.sh"
  - export BOOST_163_ROOT_DIR="/home/gitlab-runner/environments/giftgrab/boost163"

stages:
  - install
  - test_cmake
  - test_pypi

################## Platform: CMake ##################
################## Target: All ######################
linux:
  stage: install
  script:
    # prepare environment
    - export GiftGrab_BUILD_DIR="$SCRATCH_DIR/build/GiftGrab-linux"
    - export INSTALL_DIR="$SCRATCH_DIR/install-linux"
    - rm -rf "$GiftGrab_BUILD_DIR"
    - mkdir -p "$GiftGrab_BUILD_DIR"
    - cd "$GiftGrab_BUILD_DIR"
    # start script
    - pwd
    # bare-bones build
    - cmake -D CMAKE_INSTALL_PREFIX="$INSTALL_DIR" "$GiftGrab_SOURCE_DIR"
    - make -j; exit_on_fail
    # no ctest: no features activated to be tested yet
    - make install
    # Python and tests (currently all python)
    - cmake -D BUILD_PYTHON=ON -D BUILD_TESTS=ON .
    - make -j; exit_on_fail
    # no ctest: no features activated to be tested yet
    - make install
    # HEVC support
    - cmake -D USE_HEVC=ON .
    - make -j; exit_on_fail
    - ctest; exit_on_fail
    - make install
    # HEVC support with x265
    - cmake -D ENABLE_GPL=ON -D USE_X265=ON .
    - make -j; exit_on_fail
    - ctest; exit_on_fail
    - make install
    # turn x265 off explicitly for combination testing
    - cmake -D ENABLE_GPL=OFF -D USE_X265=OFF .
    # hardware-accelerated HEVC
    - cmake -D ENABLE_NONFREE=ON -D USE_NVENC=ON .
    - make -j; exit_on_fail
    - ctest; exit_on_fail
    - make install
    # Xvid support (OpenCV should get switched here)
    - cmake -D USE_XVID=ON .
    - make -j; exit_on_fail
    - ctest; exit_on_fail
    - make install
    # VP9 support
    - cmake -D USE_VP9=ON .
    - make -j; exit_on_fail
    # not executing VP9 tests due to issue #189
    - ctest -E Test_VP9; exit_on_fail
    - make install
    # NumPy support
    - cmake -D USE_NUMPY=ON .
    - make -j; exit_on_fail
    # not executing VP9 tests due to issue #189
    - ctest -E Test_VP9; exit_on_fail
    - make install
    # test support for video files
    - cmake -D USE_FILES=ON .
    - make -j; exit_on_fail
    # not executing VP9 tests due to issue #189
    - ctest -E Test_VP9; exit_on_fail
    - make install
    # build docs
    - cmake -D BUILD_DOC=ON .
    - make -j; exit_on_fail
    # no ctest: only checking whether doc building
    # properly here
    - make install
  tags:
    - gift-linux
    - gift-adelie
  except:
    - 164-revise-readme
    - 162-revise-contribution-guide-before-open-sourcing
    - 168-correct-ffmpeg-version-in-documentation
    - 177-howto-links-for-dependencies-broken-on-github-mirror
    - 179-pypi-installer-name-broken
    - 41-configure-python-documentation-properly
    - 195-fix-github-link-to-known-issues-from-requirements-md
    - 201-incorporate-debian-installation-caveats-into-documentation
    - 202-add-installation-instructions-for-a-minimal-version
    - 206-revise-readme-for-information-content-and-cosmetics
    - 203-make-dependency-versions-more-visible-in-documentation
    - 207-check-all-changed-cross-references-in-docs-before-release
    - 212-revise-minimal-example-header-hierarchy
    - 220-add-non-standard-boost-installation-path-to-minimal-example
    - 222-add-how-to-cite-block-in-main-readme
    - 224-add-a-citing-gift-grab-section-to-pypi-page
    - 225-add-citing-gift-grab-section-to-rtd-index
    - 223-add-some-information-on-the-main-doxygen-home-page

################## Platform: PyPI ##################
################## Target: All #####################
pypi:
  stage: install
  script:
    - GiftGrab_PyPI_BUILD_DIR="$SCRATCH_DIR/pypi"
    - GiftGrab_PyPI_INSTALL_DIR="$GiftGrab_PyPI_BUILD_DIR/install"
    - GiftGrab_venv=venv
    - rm -rf "$GiftGrab_PyPI_BUILD_DIR"
    - mkdir "$GiftGrab_PyPI_BUILD_DIR"
    - rm -rf "$GiftGrab_PyPI_INSTALL_DIR"
    - mkdir "$GiftGrab_PyPI_INSTALL_DIR"
    - cd "$GiftGrab_PyPI_BUILD_DIR"
    - export GiftGrab_PyPI_DIST_DIR=dist
    - rm -rfv "$GiftGrab_PyPI_DIST_DIR"
    - cd "$GiftGrab_SOURCE_DIR"
    - python setup.py sdist
    - mv "$GiftGrab_PyPI_DIST_DIR" "$GiftGrab_PyPI_BUILD_DIR"
    - cd "$GiftGrab_PyPI_BUILD_DIR"
    - virtualenv $GiftGrab_venv
    - cd $GiftGrab_venv
    - source bin/activate
    - pip install pytest
    - pip install pyyaml
    - ls -alh ./*
    - PyPI_INSTALLER="../$GiftGrab_PyPI_DIST_DIR/$(ls ../$GiftGrab_PyPI_DIST_DIR | grep tar.gz)"
    - if [ -z "$PyPI_INSTALLER" ]; then exit 1; fi
    # Ensure installer without options fails
    - set +e
    - pip install -vvv --upgrade "$PyPI_INSTALLER"; exit_on_success
    - set -e
    # HEVC support
    - pip install -vvv --install-option="--hevc" --upgrade "$PyPI_INSTALLER"
    - test-giftgrab-hevc-bgra; exit_on_fail
    # HEVC support with x265
    - pip install -vvv --install-option="--hevc" --install-option="--enable-gpl" --install-option="--x265" --upgrade "$PyPI_INSTALLER"
    - test-giftgrab-hevc-bgra; exit_on_fail
    - test-giftgrab-hevc-i420; exit_on_fail
    # hardware-accelerated HEVC
    - pip install -vvv --install-option="--hevc" --install-option="--enable-nonfree" --install-option="--nvenc" --upgrade "$PyPI_INSTALLER"
    - test-giftgrab-hevc-bgra; exit_on_fail
    - test-giftgrab-hevc-i420; exit_on_fail
    # Xvid support
    - pip install -vvv --install-option="--hevc" --install-option="--enable-nonfree" --install-option="--nvenc" --install-option="--xvid" --upgrade "$PyPI_INSTALLER"
    - test-giftgrab-xvid-bgra; exit_on_fail
    # VP9 support
    - pip install -vvv --install-option="--hevc" --install-option="--enable-nonfree" --install-option="--nvenc" --install-option="--xvid" --install-option="--vp9" --upgrade "$PyPI_INSTALLER"
    # not executing VP9 tests due to issue #189
    # - test-giftgrab-vp9-bgra; exit_on_fail
    # - test-giftgrab-vp9-i420; exit_on_fail
    # NumPy support
    - pip install -vvv --install-option="--hevc" --install-option="--enable-nonfree" --install-option="--nvenc" --install-option="--xvid" --install-option="--vp9" --install-option="--numpy" --upgrade "$PyPI_INSTALLER"
    # TODO: delete these five lines after issue #133
    - test-giftgrab-hevc-bgra; exit_on_fail
    - test-giftgrab-hevc-i420; exit_on_fail
    - test-giftgrab-xvid-bgra; exit_on_fail
    # not executing VP9 tests due to issue #189
    # - test-giftgrab-vp9-bgra; exit_on_fail
    # - test-giftgrab-vp9-i420; exit_on_fail
    # Run the actual NumPy tests
    - pip install numpy
    - test-giftgrab-numpy-bgra; exit_on_fail
    - test-giftgrab-numpy-i420; exit_on_fail
    # test support for video files
    - pip install -vvv --install-option="--hevc" --install-option="--enable-nonfree" --install-option="--nvenc" --install-option="--xvid" --install-option="--vp9" --install-option="--numpy" --install-option="--files" --upgrade "$PyPI_INSTALLER"
    - test-giftgrab-file-hevc-bgra; exit_on_fail
    - test-giftgrab-file-hevc-i420; exit_on_fail
    - test-giftgrab-file-hevc-uyvy; exit_on_fail
    - test-giftgrab-file-xvid-bgra; exit_on_fail
    - test-giftgrab-file-xvid-i420; exit_on_fail
    - test-giftgrab-file-xvid-i420; exit_on_fail
    # not executing VP9 tests due to issue #189
    # - test-giftgrab-file-vp9-bgra; exit_on_fail
    # - test-giftgrab-file-vp9-i420; exit_on_fail
    # - test-giftgrab-file-vp9-uyvy; exit_on_fail
    - deactivate
  tags:
    - gift-linux
    - gift-pypi
    - gift-adelie
  except:
    - 164-revise-readme
    - 162-revise-contribution-guide-before-open-sourcing
    - 168-correct-ffmpeg-version-in-documentation
    - 177-howto-links-for-dependencies-broken-on-github-mirror
    - 179-pypi-installer-name-broken
    - 41-configure-python-documentation-properly
    - 195-fix-github-link-to-known-issues-from-requirements-md
    - 201-incorporate-debian-installation-caveats-into-documentation
    - 202-add-installation-instructions-for-a-minimal-version
    - 206-revise-readme-for-information-content-and-cosmetics
    - 203-make-dependency-versions-more-visible-in-documentation
    - 207-check-all-changed-cross-references-in-docs-before-release
    - 212-revise-minimal-example-header-hierarchy
    - 220-add-non-standard-boost-installation-path-to-minimal-example
    - 222-add-how-to-cite-block-in-main-readme
    - 225-add-citing-gift-grab-section-to-rtd-index
    - 223-add-some-information-on-the-main-doxygen-home-page

################## Device: Epiphan DVI2PCIe Duo ##################
################## Platform: PyPI ################################
################## Target: All ###################################
pypi-epiphan-dvi2pcie-duo:
  stage: test_pypi
  script:
    # for custom FFmpeg:
    - export STORZ_STACK_GIFTGRAB_ENV_ROOT=/home/gitlab-runner/environments/giftgrab/usr/local
    # TODO - export PATH="$STORZ_STACK_GIFTGRAB_ENV_ROOT/bin":$PATH
    - export PKG_CONFIG_PATH="$STORZ_STACK_GIFTGRAB_ENV_ROOT/lib/pkgconfig":$PKG_CONFIG_PATH
    - GiftGrab_PyPI_BUILD_DIR="$SCRATCH_DIR/pypi-epiphan-dvi2pcie-duo"
    - GiftGrab_PyPI_INSTALL_DIR="$GiftGrab_PyPI_BUILD_DIR/install"
    - GiftGrab_venv=venv
    - rm -rf "$GiftGrab_PyPI_BUILD_DIR"
    - mkdir "$GiftGrab_PyPI_BUILD_DIR"
    - rm -rf "$GiftGrab_PyPI_INSTALL_DIR"
    - mkdir "$GiftGrab_PyPI_INSTALL_DIR"
    - cd "$GiftGrab_PyPI_BUILD_DIR"
    - export GiftGrab_PyPI_DIST_DIR=dist
    - rm -rfv "$GiftGrab_PyPI_DIST_DIR"
    - cd "$GiftGrab_SOURCE_DIR"
    - python setup.py sdist
    - mv "$GiftGrab_PyPI_DIST_DIR" "$GiftGrab_PyPI_BUILD_DIR"
    - cd "$GiftGrab_PyPI_BUILD_DIR"
    - virtualenv $GiftGrab_venv
    - cd $GiftGrab_venv
    - source bin/activate
    - ls -alh ./*
    - PyPI_INSTALLER="../$GiftGrab_PyPI_DIST_DIR/$(ls ../$GiftGrab_PyPI_DIST_DIR | grep tar.gz)"
    - if [ -z "$PyPI_INSTALLER" ]; then exit 1; fi
    # because pip seems to be getting confused about install options on Storz stack:
    - pip install PyYAML
    - pip install pytest
    # Epiphan DVI2PCIe Duo support (OpenCV only)
    - pip install -vvv --install-option="--hevc" --install-option="--nvenc" --install-option="--enable-nonfree" --install-option="--xvid" --install-option="--vp9" --install-option="--epiphan-dvi2pcie-duo" --install-option="--no-i420" --upgrade "$PyPI_INSTALLER"
    # Disabled the BGRA tests of Epiphan DVI2PCIe Duo (currently using OpenCV) until issue #115 is resolved
    # - test-giftgrab-epiphan-dvi2pcieduo-bgra; exit_on_fail
    # - edd-dvi-bgra-hevc; exit_on_fail
    # - edd-sdi-bgra-hevc; exit_on_fail
    # - edd-dvi-bgra-xvid; exit_on_fail
    # - edd-sdi-bgra-xvid; exit_on_fail
    # - edd-dvi-bgra-vp9; exit_on_fail
    # - edd-sdi-bgra-vp9; exit_on_fail
    # Epiphan DVI2PCIe Duo support (Epiphan SDK only)
    - pip install -vvv --install-option="--hevc" --install-option="--nvenc" --install-option="--enable-nonfree" --install-option="--vp9" --install-option="--epiphan-dvi2pcie-duo" --install-option="--epiphansdk" --install-option="--no-bgra" --upgrade "$PyPI_INSTALLER"
    # TODO: issue #102
    # - test-giftgrab-epiphan-dvi2pcieduo-i420; exit_on_fail
    # Disabled the BGRA tests of Epiphan DVI2PCIe Duo (currently using OpenCV) until issue #115 is resolved
    - edd-dvi-i420-hevc; exit_on_fail
    - edd-sdi-i420-hevc; exit_on_fail
    - edd-dvi-i420-vp9; exit_on_fail
    - edd-sdi-i420-vp9; exit_on_fail
    - ls -alh ./*.mp4
    # - ls -alh ./*.avi
    - ls -alh ./*.webm
    - rm -f ./*.mp4 ./*.avi ./*.webm
    # Epiphan DVI2PCIe Duo support (both OpenCV and Epiphan SDK)
    # dummy var, to induce width_offset in test_epiphan_py_module.py
    # see definition of width_offset in test_epiphan_py_module.py (Epiphan DVI2PCIe Duo tests)
    - export USE_EPIPHANSDK=3
    - pip install -vvv --install-option="--hevc" --install-option="--nvenc" --install-option="--enable-nonfree" --install-option="--xvid" --install-option="--vp9" --install-option="--epiphan-dvi2pcie-duo" --install-option="--epiphansdk" --upgrade "$PyPI_INSTALLER"
    - test-giftgrab-epiphan-dvi2pcieduo-i420; exit_on_fail
    - edd-dvi-i420-hevc; exit_on_fail
    - edd-sdi-i420-hevc; exit_on_fail
    - edd-dvi-i420-vp9; exit_on_fail
    - edd-sdi-i420-vp9; exit_on_fail
    - ls -alh ./*.mp4
    - ls -alh ./*.webm
    - rm -f ./*.mp4 ./*.avi ./*.webm
    # NumPy support
    - pip install -vvv --install-option="--hevc" --install-option="--nvenc" --install-option="--enable-nonfree" --install-option="--xvid" --install-option="--vp9" --install-option="--epiphan-dvi2pcie-duo" --install-option="--epiphansdk" --install-option="--numpy" --upgrade "$PyPI_INSTALLER"
    - test-giftgrab-epiphan-dvi2pcieduo-i420; exit_on_fail
    - edd-dvi-i420-hevc; exit_on_fail
    - edd-sdi-i420-hevc; exit_on_fail
    - edd-dvi-i420-vp9; exit_on_fail
    - edd-sdi-i420-vp9; exit_on_fail
    - ls -alh ./*.mp4
    - ls -alh ./*.webm
    - rm -f ./*.mp4 ./*.avi ./*.webm
    # Run the actual NumPy tests
    - pip install numpy
    - test-giftgrab-numpy-i420; exit_on_fail
    - unset USE_EPIPHANSDK  # remove dummy var
    - deactivate
  tags:
    - gift-linux
    - gift-pypi
    - gift-epiphan-dvi2pcie-duo
  only:
    - this-branch-should-never-exist

################## Device: Epiphan DVI2PCIe Duo ##################
epiphan-dvi2pcie-duo:
  stage: test_cmake
  script:
    # prepare environment
    - export GiftGrab_BUILD_DIR="$SCRATCH_DIR/build/GiftGrab-epiphan-dvi2pcie-duo"
    - export INSTALL_DIR="$SCRATCH_DIR/install-epiphan-dvi2pcie-duo"
    - rm -rf "$GiftGrab_BUILD_DIR"
    - mkdir -p "$GiftGrab_BUILD_DIR"
    - cd "$GiftGrab_BUILD_DIR"
    # start script
    # for custom FFmpeg:
    - export STORZ_STACK_GIFTGRAB_ENV_ROOT=/home/gitlab-runner/environments/giftgrab/usr/local
    # TODO - export PATH="$STORZ_STACK_GIFTGRAB_ENV_ROOT/bin":$PATH
    - export PKG_CONFIG_PATH="$STORZ_STACK_GIFTGRAB_ENV_ROOT/lib/pkgconfig":$PKG_CONFIG_PATH
    # test VideoSourceFactory (needs both colour spaces enabled)
    # Epiphan SDK
    # dummy var, to induce width_offset in test_epiphan_py_module.py
    # see definition of width_offset in test_epiphan_py_module.py (Epiphan DVI2PCIe Duo tests)
    - export USE_EPIPHANSDK=3
    - cmake -D USE_EPIPHAN_DVI2PCIE_DUO=ON -D USE_EPIPHANSDK=ON -D ENABLE_NONFREE=ON -D BUILD_PYTHON=ON -D BUILD_TESTS=ON -D USE_HEVC=ON -D USE_NVENC=ON -D ENABLE_NONFREE=ON "$GiftGrab_SOURCE_DIR"
    - make -j; exit_on_fail
    - check_epiphan_alive
    - ctest -R Epiphan_DVI2PCIeDuo_VideoSourceFactory_DVI_I420; exit_on_fail  # due to issue #126
    - ctest -R Epiphan_DVI2PCIeDuo_VideoSourceFactory_SDI_I420; exit_on_fail  # due to issue #126
    # test BGRA colour space
    - cmake -D USE_BGRA=ON -D USE_I420=OFF .
    - make -j; exit_on_fail
    - check_epiphan_alive
    # -E => excluding VideoSourceFactory tests
    - ctest -E Epiphan_DVI2PCIeDuo_VideoSourceFactory; exit_on_fail
    - ctest -R Epiphan_DVI2PCIeDuo_VideoSourceFactory_DVI_BGRA; exit_on_fail  # due to issue #126
    - ctest -R Epiphan_DVI2PCIeDuo_VideoSourceFactory_SDI_BGRA; exit_on_fail  # due to issue #126
    # test I420 colour space
    - cmake -D USE_BGRA=OFF -D USE_I420=ON .
    - make -j; exit_on_fail
    - check_epiphan_alive
    - ctest; exit_on_fail
    # NumPy support
    - cmake -D USE_NUMPY=ON .
    - make -j; exit_on_fail
    - ctest; exit_on_fail
    - unset USE_EPIPHANSDK  # remove dummy var
  tags:
    - gift-linux
    - gift-epiphan-dvi2pcie-duo
  only:
    - this-branch-should-never-exist

################## Device: Epiphan Pearl #########################
################## Platform: PyPI ################################
pypi-network-sources:
  stage: test_pypi
  script:
    - GiftGrab_PyPI_BUILD_DIR="$SCRATCH_DIR/pypi-network-sources"
    - GiftGrab_PyPI_INSTALL_DIR="$GiftGrab_PyPI_BUILD_DIR/install"
    - GiftGrab_venv=venv
    - rm -rf "$GiftGrab_PyPI_BUILD_DIR"
    - mkdir "$GiftGrab_PyPI_BUILD_DIR"
    - rm -rf "$GiftGrab_PyPI_INSTALL_DIR"
    - mkdir "$GiftGrab_PyPI_INSTALL_DIR"
    - cd "$GiftGrab_PyPI_BUILD_DIR"
    - export GiftGrab_PyPI_DIST_DIR=dist
    - rm -rfv "$GiftGrab_PyPI_DIST_DIR"
    - cd "$GiftGrab_SOURCE_DIR"
    - python setup.py sdist
    - mv "$GiftGrab_PyPI_DIST_DIR" "$GiftGrab_PyPI_BUILD_DIR"
    - cd "$GiftGrab_PyPI_BUILD_DIR"
    - export EPIPHAN_PEARL_IP="128.16.14.129"
    - export EPIPHAN_PEARL_MRL="rtsp://$EPIPHAN_PEARL_IP:555/stream.sdp"
    - virtualenv $GiftGrab_venv
    - cd $GiftGrab_venv
    - source bin/activate
    - ls -alh ./*
    - PyPI_INSTALLER="../$GiftGrab_PyPI_DIST_DIR/$(ls ../$GiftGrab_PyPI_DIST_DIR | grep tar.gz)"
    - if [ -z "$PyPI_INSTALLER" ]; then exit 1; fi
    # because pip seems to be getting confused about install options sometimes:
    - pip install PyYAML
    - pip install pytest
    - export TESTING_NETWORK_SOURCE_ADDRESS=$EPIPHAN_PEARL_MRL
    - export TESTING_NETWORK_SOURCE_FRAME_RATE=10
    # test I420 colour space
    - export TESTING_NETWORK_SOURCE_DELAY=7
    - pip install -vvv --install-option="--network-sources" --install-option="--no-bgra" --install-option="--hevc" --install-option="--nvenc" --install-option="--enable-nonfree" --upgrade "$PyPI_INSTALLER"
    - test-giftgrab-network-sources-i420; exit_on_fail
    # test BGRA colour space
    - unset TESTING_NETWORK_SOURCE_DELAY
    - pip install -vvv --install-option="--network-sources" --install-option="--no-i420" --install-option="--hevc" --install-option="--nvenc" --install-option="--enable-nonfree" --upgrade "$PyPI_INSTALLER"
    - test-giftgrab-network-sources-bgra; exit_on_fail
    # deactivate virtual env
    - deactivate
  tags:
    - gift-linux
    - gift-pypi
    - gift-epiphan-pearl
  only:
    - 5-add-support-for-blackmagic
    - 174-networksourceunavailable-not-exposed-to-python

################## Device: Epiphan Pearl ##################
network-sources:
  stage: test_cmake
  script:
    # prepare environment
    - export GiftGrab_BUILD_DIR="$SCRATCH_DIR/build/GiftGrab-network-sources"
    - export INSTALL_DIR="$SCRATCH_DIR/install-network-sources"
    - rm -rf "$GiftGrab_BUILD_DIR"
    - mkdir -p "$GiftGrab_BUILD_DIR"
    - cd "$GiftGrab_BUILD_DIR"
    - export EPIPHAN_PEARL_IP="128.16.14.129"
    - export EPIPHAN_PEARL_MRL="rtsp://$EPIPHAN_PEARL_IP:555/stream.sdp"
    # test I420 colour space
    - cmake -D TESTING_NETWORK_SOURCE_ADDRESS=$EPIPHAN_PEARL_MRL -D TESTING_NETWORK_SOURCE_FRAME_RATE=10 -D TESTING_NETWORK_SOURCE_DELAY=7 -D USE_NETWORK_SOURCES=ON -D USE_BGRA=OFF -D BUILD_PYTHON=ON -D BUILD_TESTS=ON -D USE_HEVC=ON -D USE_NVENC=ON -D ENABLE_NONFREE=ON "$GiftGrab_SOURCE_DIR"
    - make -j; exit_on_fail
    - ctest; exit_on_fail
    # test BGRA colour space
    - cmake -D USE_BGRA=ON -D USE_I420=OFF .
    - make -j; exit_on_fail
    - ctest; exit_on_fail
  tags:
    - gift-linux
    - gift-epiphan-pearl
  only:
    - 5-add-support-for-blackmagic
    - 174-networksourceunavailable-not-exposed-to-python

################## Network streaming ##################
network-streaming:
  stage: test_cmake
  script:
    - echo "Hello planet Earth!"
    - this-command-should-not-exist
  tags:
    - gift-linux
    - gift-network-video-streamer
  only:
    - 234-add-streaming-capabilities-to-create-a-rtsp-stream-from-within-gift-grab

################## Device: Blackmagic DeckLink SDI 4K ##################
pypi-blackmagic-decklink-sdi-4k:
  stage: test_pypi
  script:
    # prepare environment
    - export BlackmagicSDK_DIR="/home/gitlab-runner/environments/giftgrab/opt/Blackmagic_DeckLink_SDK_10.4/SDK"
    # custom Boost
    - export BOOST_ROOT="/home/gitlab-runner/environments/giftgrab/usr/local"
    - GiftGrab_PyPI_BUILD_DIR="$SCRATCH_DIR/pypi-blackmagic-decklink-sdi-4k"
    - GiftGrab_PyPI_INSTALL_DIR="$GiftGrab_PyPI_BUILD_DIR/install"
    - GiftGrab_venv=venv
    - rm -rf "$GiftGrab_PyPI_BUILD_DIR"
    - mkdir "$GiftGrab_PyPI_BUILD_DIR"
    - rm -rf "$GiftGrab_PyPI_INSTALL_DIR"
    - mkdir "$GiftGrab_PyPI_INSTALL_DIR"
    - cd "$GiftGrab_PyPI_BUILD_DIR"
    - export GiftGrab_PyPI_DIST_DIR=dist
    - rm -rfv "$GiftGrab_PyPI_DIST_DIR"
    - cd "$GiftGrab_SOURCE_DIR"
    - python setup.py sdist
    - mv "$GiftGrab_PyPI_DIST_DIR" "$GiftGrab_PyPI_BUILD_DIR"
    - cd "$GiftGrab_PyPI_BUILD_DIR"
    - virtualenv $GiftGrab_venv
    - cd $GiftGrab_venv
    - source bin/activate
    - ls -alh ./*
    - PyPI_INSTALLER="../$GiftGrab_PyPI_DIST_DIR/$(ls ../$GiftGrab_PyPI_DIST_DIR | grep tar.gz)"
    - if [ -z "$PyPI_INSTALLER" ]; then exit 1; fi
    # because pip seems to be getting confused about install options sometimes:
    - pip install PyYAML
    - pip install pytest
    - pip install -vvv --install-option="--blackmagic-decklink-sdi-4k" --install-option="--enable-nonfree" --upgrade "$PyPI_INSTALLER"
    # run tests
    - test-giftgrab-blackmagic-decklinksdi4k-uyvy; exit_on_fail
    # deactivate virtual env
    - deactivate
  tags:
    - gift-blackmagic-decklink-sdi-4k
  only:
    - this-branch-should-never-exist

blackmagic-decklink-sdi-4k:
  stage: test_cmake
  script:
    # prepare environment
    - export BlackmagicSDK_DIR="/home/gitlab-runner/environments/giftgrab/opt/Blackmagic_DeckLink_SDK_10.4/SDK"
    # custom Boost
    - export BOOST_ROOT="/home/gitlab-runner/environments/giftgrab/usr/local"
    - export GiftGrab_BUILD_DIR="$SCRATCH_DIR/build/GiftGrab-blackmagic-decklink-sdi-4k"
    - rm -rf "$GiftGrab_BUILD_DIR"
    - mkdir -p "$GiftGrab_BUILD_DIR"
    - cd "$GiftGrab_BUILD_DIR"
    - cmake -D BUILD_PYTHON=ON -D BUILD_TESTS=ON -D USE_BLACKMAGIC_DECKLINK_SDI_4K=ON -D ENABLE_NONFREE=ON "$GiftGrab_SOURCE_DIR"
    - make -j; exit_on_fail
    - ctest; exit_on_fail
  tags:
    - gift-blackmagic-decklink-sdi-4k
  only:
    - this-branch-should-never-exist
